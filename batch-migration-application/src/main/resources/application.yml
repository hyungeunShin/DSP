spring:
  profiles:
    include: migration

  jpa:
    legacy-ad:
      hikari:
        maximum-pool-size: 400

    recent-ad:
      hikari:
        maximum-pool-size: 400

  cloud:
    function:
      definition: migrationUserConsumer;pageMigrationConsumer

    stream:
      kafka:
        bindings:
          migrationUserConsumer-in-0:
            consumer:
              start-offset: latest
          migration-user-out:
            producer:
              sync: true
          page-migration-out:
            producer:
              sync: true
          pageMigrationConsumer-in-0:
            consumer:
              start-offset: latest

      binders:
        migration-kafka:
          type: kafka
          environment:
            spring.cloud.stream.kafka.binder:
              brokers: localhost
              defaultBrokerPort: 9094
              auto-create-topics: true
              replication-factor: 1
              auto-add-partitions: true
              min-partition-count: 4

      bindings:
        migrationUserConsumer-in-0:
          binder: migration-kafka
          destination: migration-user-topic
          group: batch-migration
        migration-user-out:
          binder: migration-kafka
          destination: migration-user-topic
          producer:
            partition-key-expression: headers['partitionKey']
            partition-count: 4
        page-migration-out:
          binder: migration-kafka
          destination: page-migration-topic
          producer:
            partition-key-expression: headers['partitionKey']
            partition-count: 4
        pageMigrationConsumer-in-0:
          binder: migration-kafka
          destination: page-migration-topic
          group: batch-migration

  task:
    execution:
      pool:
        core-size: 200
        max-size: 200
        queue-capacity: 1000
        keep-alive: 30s

server:
  port: 8083

logging:
  file:
    name: logs/batch.log